
# ██████╗ ██╗███████╗██████╗ ██╗      █████╗ ██╗   ██╗
# ██╔══██╗██║██╔════╝██╔══██╗██║     ██╔══██╗╚██╗ ██╔╝
# ██║  ██║██║███████╗██████╔╝██║     ███████║ ╚████╔╝ 
# ██║  ██║██║╚════██║██╔═══╝ ██║     ██╔══██║  ╚██╔╝  
# ██████╔╝██║███████║██║     ███████╗██║  ██║   ██║   
# ╚═════╝ ╚═╝╚══════╝╚═╝     ╚══════╝╚═╝  ╚═╝   ╚═╝   

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: RGB

#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
  SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
  SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
  SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

[display_glyph voron]
data:
 ......***.......
 ....*******.....
 ...*********....
 .*************..
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 **..***..******.
 ******..***..**.
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 .*************..
 ...*********....
 ....*******.....
 ......***.......

[display_glyph chamber]
data:
  ................
  ****************
  *....*....*....*
  *....*....*....*
  *....******....*
  *..............*
  *..............*
  *.....****.....*
  *.***.*..*.***.*
  *.....****.....*
  *......**......*
  *..............*
  *.************.*
  *...*......*...*
  ****************
  ................                                           
  
####################################################################
#.  Display Menu definition                                         #
#####################################################################

#####################################################################
#                  Removed Items of the Stock menu                  #
#####################################################################
##  Octoprint 
[menu __main __octoprint]
type: disabled

[menu __main __sdcard]
type: disabled

##  PreHeat
[menu __main __temp __preheat_pla]
type: disabled

[menu __main __temp __preheat_abs]
type: disabled

##  use own load and unload macro
[menu __main __filament __loadf]
type: disabled

[menu __main __filament __loads]
type: disabled

[menu __main __filament __unloadf]
type: disabled

[menu __main __filament __unloads]
type: disabled

##  Delta Calibration
[menu __main __setup __calib __delta_calib_auto]
type: disabled

[menu __main __setup __calib __delta_calib_man]
type: disabled

#####################################################################
#                  Overload Items of the Stock menu                 # 
#####################################################################
  
#####################################################################
#                   Added Items to the Stock menu                   #
#####################################################################
##  Add filament load and unload macro
[menu __main __filament __load]
type: command
name: Load Filament
gcode:
  FILAMENT_LOAD
  
[menu __main __filament __unload]
type: command
name: Unload Filament
gcode:
  FILAMENT_UNLOAD
    
## Probe & Endstop Z-Offset calibration
[menu __main __setup __calib __Z_offset]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Z offset

[menu __main __setup __calib __Z_offset __start]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Do {['None','Probe','Endstop'][menu.input|int]}
input: 0
input_min: 0
input_max: 2
input_step: 1
gcode:
    {%- if menu.event == 'long_click' -%}
      {menu.back()}
      {%- if menu.input|int == 1 -%}
        {action_respond_info("Start Probe calibration")}
        PROBE_CALIBRATE
      {%- elif menu.input|int == 2 -%}
        {action_respond_info(" Start Z-Endstop calibration")}
        Z_ENDSTOP_CALIBRATE
      {%- endif -%}
    {%- endif -%}

[menu __main __setup __calib __Z_offset __move_z]
type: input
name: Move Z: {'%03.2f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_step: 1
realtime: True
gcode:
    {%- if menu.event == 'change' -%}
        G1 Z{'%.2f' % menu.input}
    {%- elif menu.event == 'long_click' -%}
        G1 Z{'%.2f' % menu.input}
        SAVE_GCODE_STATE NAME=__move__axis
        G91
        G1 Z2
        G1 Z-2
        RESTORE_GCODE_STATE NAME=__move__axis
    {%- endif -%}

[menu __main __setup __calib __Z_offset __test_z]
type: input
name: Test Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
input: 5
input_min: 0
input_max: 11
input_step: 1
gcode:
    {%- if menu.event == 'long_click' -%}
        TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
    {%- endif -%}
    
[menu __main __setup __calib __Z_offset __test_z_live]
type: input
name: Test Z : {'%03.3f' % menu.input}
input: 0
input_min: -5.0
input_max: 5.0
input_step: 0.01
realtime: True
gcode:
    {%- if menu.event == 'long_click' -%}
       TESTZ Z={'%.3f' % menu.input}
    {%- endif -%}

[menu __main __setup __calib __Z_offset __accept]
type: command
name: Accept
gcode: ACCEPT

[menu __main __setup __calib __Z_offset __abort]
type: command
name: Abort
gcode: ABORT